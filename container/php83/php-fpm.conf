[global]
daemonize = no

[www]
listen = 127.0.0.1:9000
user = root
group = root

; Choose how the process manager will control the number of child processes.
; Possible values: static, ondemand, dynamic. This option is mandatory.
; static - the number of child processes is fixed (pm.max_children).
; ondemand - the processes spawn on demand (when requested, as opposed to dynamic,
; where pm.start_servers are started when the service is started.
; dynamic - the number of child processes is set dynamically based on the following
; directives: pm.max_children, pm.start_servers, pm.min_spare_servers, pm.max_spare_servers.
pm = ondemand

; The number of child processes to be created when pm is set to 'static' and the
; maximum number of child processes when pm is set to 'dynamic' or 'ondemand'.
; This value sets the limit on the number of simultaneous requests that will be
; served. Equivalent to the ApacheMaxClients directive with mpm_prefork.
; Equivalent to the PHP_FCGI_CHILDREN environment variable in the original PHP
; CGI. The below defaults are based on a server without much resources. Don't
; forget to tweak pm.* to fit your needs.
pm.max_children = 20

; The number of requests each child process should execute before respawning.
; This can be useful to work around memory leaks in 3rd party libraries. For
; endless request processing specify '0'. Equivalent to PHP_FCGI_MAX_REQUESTS.
pm.max_requests = 50

; The number of seconds after which an idle process will be killed.
pm.process_idle_timeout = 10s
