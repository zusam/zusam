# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  lang: '%env(resolve:LANG)%'
  version: '%env(resolve:VERSION)%'
  protocol: '%env(resolve:PROTOCOL)%'
  domain: '%env(resolve:DOMAIN)%'
  port: '%env(resolve:PORT)%'
  app_env: '%env(resolve:APP_ENV)%'
  allow.upload.image: '%env(resolve:ALLOW_IMAGE_UPLOAD)%'
  allow.upload.video: '%env(resolve:ALLOW_VIDEO_UPLOAD)%'
  allow.upload.pdf: '%env(resolve:ALLOW_PDF_UPLOAD)%'
  allow.upload.audio: '%env(resolve:ALLOW_AUDIO_UPLOAD)%'
  show.group.invitation.links: '%env(resolve:SHOW_GROUP_INVITATION_LINKS)%'
  idle_hours: '%env(resolve:IDLE_HOURS)%'
  video_conversion_threads: '%env(resolve:VIDEO_CONVERSION_THREADS)%'
  video_format_not_converted: '%env(resolve:VIDEO_FORMAT_NOT_CONVERTED)%'
  video_size_not_converted: '%env(resolve:VIDEO_SIZE_NOT_CONVERTED)%'
  max_task_lock_duration: '%env(resolve:MAX_TASK_LOCK_DURATION)%'
  allow.bots: '%env(resolve:ALLOW_BOTS)%'
  allow.email: '%env(resolve:ALLOW_EMAIL)%'
  database_url: '%env(resolve:DATABASE_URL)%'
  binaries.ffmpeg: '%env(resolve:FFMPEG_PATH)%'
  binaries.ghostscript: '%env(resolve:GHOSTSCRIPT_PATH)%'
  dir.public: '%kernel.project_dir%/../public'
  dir.files: '%env(resolve:dir_files)%'
  dir.cache: '%env(resolve:dir_cache)%'
  dir.bots: '%env(resolve:dir_bots)%'
  cron.convert.images: '%env(resolve:CRON_CONVERT_IMAGES)%'
  cron.convert.video: '%env(resolve:CRON_CONVERT_VIDEO)%'
  cron.notification.emails: '%env(resolve:CRON_NOTIFICATION_EMAILS)%'
  cron.compress.gifs: '%env(resolve:CRON_COMPRESS_GIFS)%'
  cron.bot.activate: '%env(resolve:CRON_BOT_ACTIVATE)%'
  cron.clean.cache: '%env(resolve:CRON_CLEAN_CACHE)%'
  cron.clean.notifications: '%env(resolve:CRON_CLEAN_NOTIFICATIONS)%'
  cron.clean.files: '%env(resolve:CRON_CLEAN_FILES)%'
  cron.clean.messages: '%env(resolve:CRON_CLEAN_MESSAGES)%'
  cron.clean.groups: '%env(resolve:CRON_CLEAN_GROUPS)%'

services:
    # default configuration for services in *this* file
    _defaults:
      autowire: true      # Automatically injects dependencies in your services.
      autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
      public: false       # Allows optimizing the container by removing unused services; this also means
                          # fetching services directly from the container via $container->get() won't work.
                          # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
      resource: '../src/*'
      exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
      resource: '../src/Controller'
      tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\EventListener\TerminateListener:
      arguments:
        $env: '%kernel.environment%'
      tags:
        - { name: kernel.event_listener, event: kernel.terminate }

    App\Controller\Security:
      arguments:
        $limiter: '@security.login_throttling.login.limiter'

    App\Command\Cron:
      arguments:

    App\Command\Migration:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'

    App\Command\PreparePreviews:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'

    App\Command\ConvertVideo:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'
        $targetDir: '%env(resolve:dir_files)%'
        $binaryFfmpeg: '%env(resolve:FFMPEG_PATH)%'

    App\Command\ConvertImages:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'
        $targetDir: '%env(resolve:dir_files)%'

    App\Command\CompressGifs:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'
        $targetDir: '%env(resolve:dir_files)%'

    App\Command\CleanCache:
      arguments:
        $targetDir: '%env(resolve:dir_cache)%'

    App\Command\CleanFiles:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'
        $targetDir: '%env(resolve:dir_files)%'

    App\Command\CleanGroups:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'

    App\Command\CleanMessages:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'

    App\Command\CleanNotifications:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'

    App\Command\IssueNotification:
      arguments:

    App\Command\NotificationEmails:
      arguments:

    App\Command\ListInviteLinks:
      arguments:

    App\Command\StorageStatistics:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'
        $targetDir: '%env(resolve:dir_files)%'

    App\Command\GroupStatistics:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'
        $targetDir: '%env(resolve:dir_files)%'

    App\Command\UserStatistics:
      arguments:
        $dsn: '%env(resolve:DATABASE_URL)%'
        $targetDir: '%env(resolve:dir_files)%'

    App\Command\ActivateBot:
      arguments:
        $botDir: '%env(resolve:dir_bots)%'
        $allow_bots: '%env(resolve:ALLOW_BOTS)%'

    App\Service\Bot:
      arguments:
        $botDir: '%env(resolve:dir_bots)%'

    App\Service\Mailer:
      arguments:
        $twig: '@twig'
        $domain: '%env(resolve:DOMAIN)%'
        $lang: '%env(resolve:LANG)%'
        $allow_email: '%env(resolve:ALLOW_EMAIL)%'
        $env: '%kernel.environment%'

    App\Service\Url:
      arguments:
